{"version":3,"sources":["UI/components/Navbar/Navbar.tsx","BLL/localStorage.ts","UI/components/PhotosPage/PhotosPage.tsx","UI/components/BookmarksPage/BookmarksPage.tsx","UI/common/modal/Modal.tsx","DAL/instance.ts","DAL/api.ts","BLL/mainPage-reducer.ts","UI/common/Pagination/Pagination.tsx","UI/components/SearchPage/Search.tsx","App.tsx","reportWebVitals.ts","BLL/store.ts","index.tsx","UI/common/modal/Modal.module.css","UI/components/Navbar/Navbar.module.css","UI/components/PhotosPage/PhotosPage.module.css","UI/components/BookmarksPage/BookmarksPage.module.css","UI/components/SearchPage/Search.module.css","App.module.css"],"names":["Navbar","className","style","navbarContainer","Grid","container","direction","alignItems","to","IconButton","color","hov","Cloud","fontSize","setPhotoToLocalStorage","localStorageName","stringData","localStorage","setItem","getParseLocalStorageData","JSON","parse","getItem","Photos","photos","titleBtn","handlerOnClick","containerPhotos","map","p","Paper","elevation","photo","src","server","id","secret","alt","onClick","title","Bookmarks","useState","photosLS","setPhotosLS","bookmarks","newPhotoData","filter","stringify","Modal","active","setActive","children","modal","modalContent","instance","axios","create","baseURL","pageAPI","keyword","page","perpage","get","initialState","pagination","pages","actions","type","currentPage","searchPhotos","dispatch","getState","mainPageReducer","then","res","data","e","console","log","Pagination","useSelector","state","activePage","useDispatch","pagesCount","i","push","borderCount","Math","ceil","length","borderNumber","setBorderNumber","leftBorderPageNumber","rightBorderPageNumber","Button","variant","undefined","changePage","Search","value","setValue","modalActive","setModalActive","photoLS","setPhotoLS","useEffect","searchContainer","inputSearch","onChange","currentTarget","onKeyPress","key","placeholder","find","App","timeoutId","setTimeoutId","notification","setNotification","useStyles","makeStyles","theme","createStyles","root","flexGrow","menuButton","marginRight","spacing","onMouseMove","forEach","val","window","clearTimeout","setTimeout","AppBar","position","Toolbar","Typography","aria-label","aria-controls","aria-haspopup","AccountCircle","mainPage","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.b34f9cdb.chunk.js","sourcesContent":["import React from \"react\";\r\nimport style from './Navbar.module.css';\r\nimport {Grid, IconButton} from \"@material-ui/core\";\r\nimport {Bookmarks, Cloud } from \"@material-ui/icons\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nexport const Navbar: React.FC = () => {\r\n\r\n    return (\r\n        <div className={style.navbarContainer}>\r\n            <Grid container direction=\"column\" alignItems=\"center\">\r\n                <NavLink to=\"/search\">\r\n                    <IconButton color={\"primary\"} className={style.hov}>\r\n                        <Cloud fontSize='large' />\r\n                    </IconButton>\r\n                </NavLink>\r\n                <NavLink to=\"/bookmarks\">\r\n                    <IconButton color={\"primary\"}>\r\n                        <Bookmarks fontSize='large' className={style.hov}/>\r\n                    </IconButton>\r\n                </NavLink>\r\n            </Grid>\r\n        </div>\r\n    );\r\n}","export const setPhotoToLocalStorage = (localStorageName: string, stringData: string) => {\r\n    return localStorage.setItem(localStorageName, stringData);\r\n};\r\n\r\nexport const getParseLocalStorageData = (localStorageName: string) => {\r\n    return JSON.parse(localStorage.getItem(localStorageName) || '[]');\r\n};","import React from \"react\";\r\nimport {Paper} from \"@material-ui/core\";\r\nimport {PhotoType} from \"../../../DAL/api\";\r\nimport style from './PhotosPage.module.css'\r\n\r\nexport type PhotosType = {\r\n    photos: PhotoType[]\r\n    titleBtn: string\r\n    handlerOnClick: (id: string) => void\r\n}\r\nexport const Photos: React.FC<PhotosType> = ({photos, titleBtn, handlerOnClick}) => {\r\n    return (\r\n        <div className={style.containerPhotos}>\r\n            {photos.map(p => {\r\n                return (\r\n                    <div key={p.id}>\r\n                        <Paper elevation={3}>\r\n                            <div key={p.id} className={style.photo}>\r\n                                <img src={`https://live.staticflickr.com/${p.server}/${p.id}_${p.secret}.jpg`}\r\n                                     alt=\"\"\r\n                                />\r\n                                <button onClick={() => handlerOnClick(p.id)}\r\n                                >{titleBtn}</button>\r\n                                <span>{p.title}</span>\r\n                            </div>\r\n                        </Paper>\r\n                    </div>\r\n                )\r\n            })}\r\n        </div>\r\n    )\r\n}","import React, {useState} from \"react\";\r\nimport {PhotoType} from \"../../../DAL/api\";\r\nimport {getParseLocalStorageData, setPhotoToLocalStorage} from \"../../../BLL/localStorage\";\r\nimport {Photos} from \"../PhotosPage/PhotosPage\";\r\nimport style from './BookmarksPage.module.css'\r\n\r\nexport const Bookmarks: React.FC = () => {\r\n    const [photosLS, setPhotosLS] = useState<PhotoType[]>(getParseLocalStorageData('stateLocalStorage'))\r\n\r\n    const deletePhotoLocalStorage = (id: string) => {\r\n        const newPhotoData = photosLS.filter(p => p.id !== id)\r\n        setPhotosLS(newPhotoData);\r\n        setPhotoToLocalStorage('stateLocalStorage', JSON.stringify(\r\n            newPhotoData\r\n        ))\r\n    }\r\n    return (\r\n        <div className={style.bookmarks}>\r\n            <h1>Bookmarks!!!</h1>\r\n            <div className={style.photo}><Photos photos={photosLS} titleBtn='Remove it!' handlerOnClick={deletePhotoLocalStorage}/></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport style from \"./Modal.module.css\";\r\n\r\ntype ModalType = {\r\n    active: boolean\r\n    setActive: (value: boolean) => void\r\n    children: string\r\n}\r\n\r\nexport const Modal: React.FC<ModalType> = ({active, setActive, children}) => {\r\n    return (\r\n        <div className={active ? `${style.modal} + '' + ${style.active}` : style.modal} onClick={() => setActive(false)}>\r\n            <div className={active ? `${style.modalContent} + '' + ${style.active}` : style.modalContent}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n}","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://api.flickr.com/services/rest'\r\n})","import {instance} from \"./instance\";\r\n\r\nexport type PhotoType = {\r\n    farm: 66\r\n    id: string\r\n    isfamily: number\r\n    isfriend: number\r\n    ispublic: number\r\n    owner: string\r\n    secret: string\r\n    server: string\r\n    title: string\r\n}\r\n\r\nexport type newPhotos = {\r\n    photos: {\r\n        page: number,\r\n        pages: number,\r\n        perpage: number,\r\n        total: number,\r\n        photo: Array<PhotoType>\r\n    }\r\n    stat: string\r\n}\r\n\r\nexport const pageAPI = {\r\n    getNewImages(keyword: string, page: number, perpage: number) {\r\n        return instance.get<newPhotos>(`?method=flickr.photos.search&api_key=92b0159e2ce672e465a40e3f519c6412&tags=${keyword}&per_page=${perpage}&page=${page}&format=json&nojsoncallback=1`)\r\n    },\r\n}","import {Dispatch} from \"redux\";\r\nimport {AppRootStateType, InferActionsTypes} from \"./store\";\r\nimport {pageAPI, PhotoType} from \"../DAL/api\";\r\n\r\nexport type PaginationType = {\r\n    page: number\r\n    pages: null | number\r\n    perpage: number\r\n}\r\n\r\nlet initialState = {\r\n    photos: [] as Array<PhotoType>,\r\n    pagination: {\r\n        page: 1,\r\n        pages: null,\r\n        perpage: 15,\r\n    } as PaginationType\r\n}\r\n\r\n\r\nexport const mainPageReducer = (state = initialState, action: ActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SET-NEW-PHOTOS' :\r\n            return {...state, photos: action.photos}\r\n        case 'SET-PAGES' :\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    pages: action.pages\r\n                }\r\n            }\r\n        case 'SET-CURRENT-PAGE':\r\n            return {\r\n                ...state,\r\n                pagination: {\r\n                    ...state.pagination,\r\n                    page: action.currentPage,\r\n                }\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n//AC\r\nexport const actions = {\r\n    setNewPhotos:(photos: Array<PhotoType>) => ({type: 'SET-NEW-PHOTOS',photos} as const),\r\n    setPages:(pages: number) => ({type: 'SET-PAGES',pages} as const),\r\n    setCurrentPage:(currentPage: number) => ({type: 'SET-CURRENT-PAGE',currentPage} as const)\r\n}\r\n\r\n//TC\r\nexport const searchPhotos = (keyword: string) => (dispatch: Dispatch, getState: () => AppRootStateType) => {\r\n    const {page, perpage} = getState().mainPageReducer.pagination\r\n    try {\r\n        pageAPI.getNewImages(keyword, page, perpage)\r\n            .then(res => {\r\n                const {pages, photo} = res.data.photos\r\n                dispatch(actions.setNewPhotos(photo))\r\n                dispatch(actions.setPages(pages))\r\n            })\r\n    } catch (e) {\r\n        console.log('Error')\r\n    }\r\n}\r\n\r\nexport type InitialStateType = typeof initialState\r\ntype ActionsType = InferActionsTypes<typeof actions>","import React, {useState} from 'react';\r\nimport style from './Pagination.module.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../BLL/store\";\r\nimport Button from '@material-ui/core/Button';\r\nimport ArrowLeftIcon from '@material-ui/icons/ArrowLeft';\r\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\r\nimport {actions} from \"../../../BLL/mainPage-reducer\";\r\n\r\nexport const Pagination: React.FC = () => {\r\n\r\n    const pages = useSelector<AppRootStateType, number | null>(state => state.mainPageReducer.pagination.pages)\r\n    const activePage = useSelector<AppRootStateType, number>(state => state.mainPageReducer.pagination.page)\r\n    const dispatch = useDispatch()\r\n\r\n    const changePage = (page: number) => {\r\n        dispatch(actions.setCurrentPage(page))\r\n    }\r\n\r\n    const pagesCount: number[] = []\r\n\r\n    if (pages) {\r\n        for (let i = 1; i <= pages; i++) {\r\n            pagesCount.push(i)\r\n        }\r\n    }\r\n\r\n    const borderSize = 11\r\n    const borderCount = Math.ceil(pagesCount.length / borderSize)\r\n    const [borderNumber, setBorderNumber] = useState(1)\r\n    const leftBorderPageNumber = (borderNumber - 1) * borderSize + 1\r\n    const rightBorderPageNumber = borderNumber * borderSize\r\n\r\n    return (\r\n        <div className={style.container}>\r\n\r\n            {borderNumber > 1 && <Button variant=\"outlined\" color=\"primary\"\r\n                                         onClick={() => {\r\n                                             setBorderNumber(borderNumber - 1)\r\n                                         }}><ArrowLeftIcon/></Button>\r\n            }\r\n\r\n            {pagesCount\r\n                .filter(p => p >= leftBorderPageNumber && p <= rightBorderPageNumber)\r\n                .map(page => {\r\n                    return <Button color=\"primary\"\r\n                                   variant={activePage === page ? \"contained\" : undefined}\r\n                                   onClick={() => {\r\n                                       changePage(page)\r\n                                   }}\r\n                    >{page}</Button>\r\n                })\r\n            }\r\n\r\n            {borderCount > borderNumber && <Button variant=\"outlined\" color=\"primary\"\r\n                                                   onClick={() => {\r\n                                                       setBorderNumber(borderNumber + 1)\r\n                                                   }}><ArrowRightIcon/></Button>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n","import React, {ChangeEvent, KeyboardEvent, useEffect, useState} from \"react\";\r\nimport {PhotoType} from \"../../../DAL/api\";\r\nimport {getParseLocalStorageData, setPhotoToLocalStorage} from \"../../../BLL/localStorage\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../../BLL/store\";\r\nimport {searchPhotos} from \"../../../BLL/mainPage-reducer\";\r\nimport {Photos} from \"../PhotosPage/PhotosPage\";\r\nimport style from './Search.module.css'\r\nimport {Pagination} from \"../../common/Pagination/Pagination\";\r\nimport {Modal} from \"../../common/modal/Modal\";\r\n\r\nexport const Search: React.FC = () => {\r\n    const [value, setValue] = useState<string>('')\r\n    const [modalActive, setModalActive] = useState<boolean>(false)\r\n    const [photoLS, setPhotoLS] = useState<PhotoType[]>(getParseLocalStorageData('stateLocalStorage'))\r\n    const activePage = useSelector<AppRootStateType, number>(state => state.mainPageReducer.pagination.page)\r\n    const photos = useSelector<AppRootStateType, PhotoType[]>(state => state.mainPageReducer.photos)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (value) {\r\n            dispatch(searchPhotos(value))\r\n        }\r\n    }, [activePage, dispatch, value])\r\n\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setValue(e.currentTarget.value)\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            dispatch(searchPhotos(value))\r\n        }\r\n    }\r\n\r\n    const addPhotoLocalStorage = (id: string) => {\r\n        const newPhotoData = photos.filter(p => p.id === id)\r\n        //const photosFromLS:PhotoType[] = getParseLocalStorageData('stateLocalStorage');\r\n        const isInLS = photoLS.find(p=> p.id === id)\r\n        if(isInLS){\r\n            //alert('Photo has already been added')\r\n            setModalActive(true);\r\n        }else {\r\n            setPhotoLS([...photoLS, newPhotoData[0]])\r\n            setPhotoToLocalStorage('stateLocalStorage', JSON.stringify(\r\n                [...photoLS, newPhotoData[0]]\r\n            ))\r\n        }\r\n    }\r\n    return (\r\n        <div className={style.searchContainer}>\r\n            <input className={style.inputSearch}\r\n                   onChange={onChangeHandler}\r\n                   onKeyPress={onKeyPressHandler}\r\n                   placeholder='Search'\r\n            />\r\n            <Modal active={modalActive} setActive={setModalActive}>Photo has already been added</Modal>\r\n            <Pagination />\r\n            <Photos photos={photos} titleBtn='Bookmarks it!' handlerOnClick={addPhotoLocalStorage}/>\r\n        </div>\r\n    )\r\n}","import React, {useState} from 'react';\r\nimport style from './App.module.css';\r\nimport {AppBar, createStyles, IconButton, makeStyles, Theme, Typography} from \"@material-ui/core\";\r\nimport {Toolbar} from '@material-ui/core';\r\nimport {AccountCircle} from \"@material-ui/icons\";\r\nimport {Redirect, Switch, Route} from 'react-router-dom';\r\nimport {Navbar} from \"./UI/components/Navbar/Navbar\";\r\nimport {Bookmarks} from \"./UI/components/BookmarksPage/BookmarksPage\";\r\nimport {Modal} from \"./UI/common/modal/Modal\";\r\nimport {Search} from \"./UI/components/SearchPage/Search\";\r\n\r\n\r\nconst App = () => {\r\n    const [timeoutId, setTimeoutId] = useState<Array<number | NodeJS.Timeout>>([])\r\n    const [notification, setNotification] = useState<boolean>(false)\r\n\r\n    const useStyles = makeStyles((theme: Theme) =>\r\n        createStyles({\r\n            root: {\r\n                flexGrow: 1,\r\n            },\r\n            menuButton: {\r\n                marginRight: theme.spacing(2),\r\n            },\r\n            title: {\r\n                flexGrow: 1,\r\n            },\r\n        }),\r\n    );\r\n\r\n    return (\r\n        <div onClick={() => {\r\n        }}\r\n             onMouseMove={() => {\r\n                 if (timeoutId.length > 0) {\r\n                     timeoutId.forEach((val: number | NodeJS.Timeout) => {\r\n                         if (typeof val === 'number') {\r\n                             window.clearTimeout(val)\r\n                         }\r\n                     });\r\n                     setTimeoutId([]);\r\n                     setNotification(false)\r\n                 }\r\n                 setTimeoutId([\r\n                     ...timeoutId,\r\n                     setTimeout(() => {\r\n                         setNotification(true)\r\n                     }, 60000)\r\n                 ])\r\n             }}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={useStyles().title}>\r\n                        Search on Flickr\r\n                    </Typography>\r\n                    {(\r\n                        <div>\r\n                            <IconButton\r\n                                aria-label=\"account of current user\"\r\n                                aria-controls=\"menu-appbar\"\r\n                                aria-haspopup=\"true\"\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle/>\r\n                            </IconButton>\r\n                        </div>\r\n                    )}\r\n                </Toolbar>\r\n            </AppBar>\r\n\r\n            <div className={style.mainPage}>\r\n                <Navbar/>\r\n                <Modal active={notification} setActive={setNotification}>Sleep mode</Modal>\r\n                <Switch>\r\n                    <Route exact path='/' render={() => <Redirect to='/search'/>}/>\r\n                    <Route exact path='/search' render={() => <Search />}/>\r\n                    <Route exact path='/bookmarks' render={() => <Bookmarks/>}/>\r\n                    <Route exact path='/404' render={() => <div>404 PAGE NO FOUND</div>}/>\r\n                    <Route exact path='*' render={() => <Redirect to='404'/>}/>\r\n                </Switch>\r\n            </div>\r\n\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" className={useStyles().title}>\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport {mainPageReducer} from \"./mainPage-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n    mainPageReducer\r\n})\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\n\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nexport type AppRootStateType = ReturnType<typeof store.getState>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { HashRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport {store} from \"./BLL/store\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <HashRouter>\r\n            <Provider store={store}>\r\n            <App/>\r\n            </Provider>\r\n        </HashRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"Modal_modal__Me44A\",\"active\":\"Modal_active__1zGVX\",\"modalContent\":\"Modal_modalContent__3wrJi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"Navbar_navbarContainer__pO6nn\",\"hov\":\"Navbar_hov__2oXMP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"containerPhotos\":\"PhotosPage_containerPhotos__1qLCP\",\"photo\":\"PhotosPage_photo__3TOtB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bookmarks\":\"BookmarksPage_bookmarks__1W7mk\",\"photo\":\"BookmarksPage_photo__1F2ce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"Search_searchContainer__30Zlz\",\"inputSearch\":\"Search_inputSearch__32dDI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainPage\":\"App_mainPage__MfBjX\"};"],"sourceRoot":""}